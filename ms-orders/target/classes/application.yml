spring:
  application:
    name: ms-orders

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none  # Empêche Hibernate de créer/modifier la DB
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect  # Utilisation d'une base en mémoire (si nécessaire)
  
  datasource:
    url: jdbc:h2:mem:testdb  # Base de données en mémoire pour éviter MySQL
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  
  h2:
    console:
      enabled: true  # Permet d'accéder à la console H2 si activée

  kafka:
    bootstrap-servers: 127.0.0.1:39092, 127.0.0.1:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    streams:
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$LongSerde
        default.value.serde: org.springframework.kafka.support.serializer.JsonSerde
        spring.json.trusted.packages: "*"
      state-dir: /tmp/kafka-streams/

  output:
    ansi:
      enabled: ALWAYS

logging:
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"

server:
  port: 9091
