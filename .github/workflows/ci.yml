name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'README.md'
      - 'documentation/**'
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18.x'

jobs:
  build:
    name: Build Backend & Frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Backend - Spring Boot
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn clean package -DskipTests=true

    # Frontend - Angular
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install Angular CLI
      run: npm install -g @angular/cli
      working-directory: frontend

    - name: Install dependencies and build
      run: |
        npm install
        npm run build -- --prod
      working-directory: frontend

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          target/*.jar
          frontend/dist/

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    services:
      kafka:
        image: bitnami/kafka
        ports:
          - 9092:9092
        env:
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092

    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v3
      with:
        name: build-artifacts

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}

    - name: Run Unit Tests
      run: mvn test

    - name: Run Integration Tests
      run: mvn verify -Pintegration-tests
      env:
        KAFKA_BOOTSTRAP_SERVERS: localhost:9092

  deploy:
    name: Deploy to Test
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v3
      with:
        name: build-artifacts

    # Exemple de déploiement sur Heroku (adaptez à votre besoin)
    - name: Deploy Backend to Heroku
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "your-heroku-app-name"
        heroku_email: "your-email@example.com"
        usedocker: false
        appdir: "."

    # Alternative pour déployer le frontend sur Netlify
    - name: Deploy Frontend to Netlify
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=frontend/dist --prod
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}