name: CI/CD with SonarCloud

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18.x'
  SONAR_PROJECT_KEY: votre_projet_key_sonar  # Remplacez par votre clé
  SONAR_ORG: votre_org_sonarcloud            # Remplacez par votre organisation

jobs:
  build-and-analyze:
    name: Build + SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nécessaire pour SonarCloud

      # Backend - Java Setup
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      # Frontend - Node Setup
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      # Build Backend with Tests (for Sonar)
      - name: Build and Test Backend
        run: |
          mvn clean verify 
          mvn jacoco:report

      # Build Frontend with Coverage
      - name: Build Frontend with Coverage
        working-directory: frontend
        run: |
          npm install -g @angular/cli
          npm ci
          npm run test -- --code-coverage --watch=false
          npm run build -- --prod

      # SonarCloud Analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Auto-généré
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     # Configuré dans les secrets GitHub
        with:
          projectBaseDir: .
          extraProperties: |
            sonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            sonar.organization=${{ env.SONAR_ORG }}
            sonar.sources=src,frontend/src
            sonar.tests=src/test,frontend/src/test
            sonar.java.binaries=target/classes
            sonar.java.test.binaries=target/test-classes
            sonar.jacoco.reportPaths=target/site/jacoco/jacoco.xml
            sonar.typescript.lcov.reportPaths=frontend/coverage/lcov.info
            sonar.exclusions=**/node_modules/**,**/*.spec.ts
            sonar.test.inclusions=**/*Test.java,**/*.spec.ts

  deploy:
    needs: build-and-analyze
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - run: echo "Déploiement ici"
      # Ajoutez vos étapes de déploiement