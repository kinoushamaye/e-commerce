name: CI/CD Pipeline

on:
  push:
    branches: [ main, ci_cd ]
    paths-ignore:
      - 'README.md'
      - 'documentation/**'
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18.x'

jobs:
  build:
    name: Build Backend & Frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Backend - Spring Boot (Maven)
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository  # Répertoire de cache Maven
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean package -DskipTests=true -Dspring.jpa.hibernate.ddl-auto=none

    # Frontend - Angular
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json  # Spécifie le chemin pour le cache

    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      with:
        path: frontend/node_modules  # Répertoire pour les dépendances frontend
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend

    - name: Build frontend
      run: npm run build -- --prod
      working-directory: frontend

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: build-artifacts

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}

    - name: Run Unit Tests
      run: mvn test -Dspring.jpa.hibernate.ddl-auto=none

    - name: Run Integration Tests
      run: mvn verify -Pintegration-tests
      env:
        KAFKA_BOOTSTRAP_SERVERS: localhost:9092

